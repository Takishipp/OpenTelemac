<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * 
 * This file is released under the 3-clause BSD license. See COPYING-BSD.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="exportXmlMASCARET" xml:lang="en">
    <refnamediv>
        <refname>exportXmlMASCARET</refname>
        <refpurpose>Export the MASCARET model or state in a file with the XML format</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling sequence</title>
        <synopsis>[error] = exportXmlMASCARET(id,FileName,withDesc,exportModel)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>error</term>
                <listitem>
                    <para>(Output argument) Error code value : zero indicates that no errors occurred</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>id</term>
                <listitem>
                    <para>MASCARET instance number returned by the function <link linkend="createMASCARET">createMASCARET</link></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>FileName</term>
                <listitem>
                    <para>Name of the XML file containing the MASCARET model or state. The length of this string does not exceed 255 characters.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>withDesc</term>
                <listitem>
                    <para>If true (value = 1), adds the description of each variable.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>exportModel</term>
                <listitem>
                    <para>If true (value = 1), exports the model. If not true (value = 0) exports the state.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>Export the MASCARET model or state in a file with the XML format</para>
        <para>This function gives the possibility to export in XML files the MASCARET state or model of a particular instance id. This file should be read with the function <link linkend="importXmlMASCARET">importXmlMASCARET</link></para>
        <para>Before using this function, it is necessary to load the model or state, with the help of one of the functions <link linkend="importModelMASCARET">importModelMASCARET</link> or <link linkend="importXmlMASCARET">importXmlMASCARET</link> with the last parameter equal to 1.
		If the state is exported, it must be initialized with the help of one of the functions <link linkend="initStateMASCARET">initStateMASCARET</link> or <link linkend="initStateNameMASCARET">initStateNameMASCARET</link>  or <link linkend="importXmlMASCARET">importXmlMASCARET</link> with the last parameter equal to 1.</para>
    </refsection>
    <refsection>
        <title>Example</title>
        <programlisting role="example">
toolbox_dir=getenv("toolbox_dir");
c = filesep();        
    
// creation of the MASCARET model
[err, id] = createMASCARET();
assert_checktrue(id>0);

// read data from files
path_xml = "file://"+toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1.xcas";
TabFileName = [strsubst(path_xml,'\','/'), ..
                 toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1.geo", ..
                 toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1_0.loi", ..
                 toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1_1.loi", ..
                 toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1.lis", ..
                 toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1.opt"];
 
TypeFileName = ["xcas","geo","loi","loi","listing","res"];
impression = 0;
err = importModelMASCARET(id,TabFileName,TypeFileName,impression);
assert_checkequal(err,0);
        
// initialisation
err = initStateNameMASCARET(id,toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1.lig",impression);
assert_checkequal(err,0);

// exporting the model in XML format
err = exportXmlMASCARET(id,toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1_Model.xml",1,1);
assert_checkequal(err,0);

// exporting the state in XML format
err = exportXmlMASCARET(id,toolbox_dir+c+"demos"+c+"Help"+c+"demo1"+c+"demo1_State.xml",1,0);
assert_checkequal(err,0);

// model deletion
err = deleteMASCARET(id);
assert_checkequal(err,0);

		</programlisting>
    </refsection>
    <refsection role="see also">
        <title>See also</title>
        <simplelist type="inline">
            <member>
                <link linkend="importXmlMASCARET">importXmlMASCARET</link>
            </member> 
            <member>
                <link linkend="importModelMASCARET">importModelMASCARET</link>
            </member>    
            <member>
                <link linkend="initStateMASCARET">initStateMASCARET</link>
            </member>    
            <member>
                <link linkend="initStateNameMASCARET">initStateNameMASCARET</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
